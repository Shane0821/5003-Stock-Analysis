version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 30s
      timeout: 10s
      retries: 5

  spark-master:
    image: bitnami/spark:3.4.1
    hostname: spark-master
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - "SPARK_MODE=master"

  spark-worker-1:
    image: bitnami/spark:3.4.1
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MODE=worker"

  spark-worker-2:
    image: bitnami/spark:3.4.1
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MODE=worker"

  topic-registry:
    image: topic-register:latest
    depends_on:
      kafka:
        condition: service_healthy
        restart: true

  producer:
    image: data-producer:latest
    depends_on:
      topic-registry:
        condition: service_completed_successfully
        restart: true
  
  processor:
    image: streaming-processor:latest
    container_name: spark-streaming-processor
    depends_on:
      topic-registry:
        condition: service_completed_successfully
        restart: true
      spark-master:
        condition: service_started
        restart: true
    environment:
      - "SPARK_MODE=worker"